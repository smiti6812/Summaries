{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/book.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = function () {\n  return [\"/books\"];\n};\nfunction UpdateBookComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function UpdateBookComponent_form_1_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 3)(2, \"label\", 4);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 6);\n    i0.ɵɵtext(7, \"Author\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"textarea\", 9);\n    i0.ɵɵtext(13, \"                \\n            \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 10)(15, \"div\", 11)(16, \"div\", 3)(17, \"label\", 12);\n    i0.ɵɵtext(18, \"Date start\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 11)(21, \"div\", 3)(22, \"label\", 14);\n    i0.ɵɵtext(23, \"Date read\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 11)(26, \"div\", 3)(27, \"label\", 16);\n    i0.ɵɵtext(28, \"Rate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(29, \"input\", 17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(30, \"button\", 18);\n    i0.ɵɵtext(31, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"button\", 19);\n    i0.ɵɵtext(33, \"Cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.updateBookForm);\n    i0.ɵɵadvance(32);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n  }\n}\nexport class UpdateBookComponent {\n  constructor(service, route, router, fb) {\n    this.service = service;\n    this.route = route;\n    this.router = router;\n    this.fb = fb;\n    this.service.getBookById(this.route.snapshot.params.id).subscribe(data => {\n      this.book = data;\n      this.updateBookForm = this.fb.group({\n        id: [data.id],\n        title: [data.title, Validators.required],\n        author: [data.author, Validators.required],\n        description: [data.description, Validators.compose([Validators.required, Validators.minLength(30)])],\n        rate: [data.rate],\n        dateStart: [this.formatDate(data.dateStart)],\n        dateRead: [this.formatDate(data.dateRead)]\n      });\n    });\n  }\n  ngOnInit() {\n    this.service.getBookById(this.route.snapshot.params.id).subscribe(data => {\n      this.book = data;\n      this.updateBookForm = this.fb.group({\n        id: [data.id],\n        title: [data.title, Validators.required],\n        author: [data.author, Validators.required],\n        description: [data.description, Validators.compose([Validators.required, Validators.minLength(30)])],\n        rate: [data.rate],\n        dateStart: [this.formatDate(data.dateStart)],\n        dateRead: [this.formatDate(data.dateRead)]\n      });\n    });\n  }\n  formatDate(date) {\n    //if (date) {\n    return new Date(date).toISOString().substring(0, 10);\n    //}\n  }\n\n  onSubmit() {\n    this.service.updateBook(this.updateBookForm.value).subscribe(data => {\n      this.router.navigate([\"/books\"]);\n    });\n  }\n}\nUpdateBookComponent.ɵfac = function UpdateBookComponent_Factory(t) {\n  return new (t || UpdateBookComponent)(i0.ɵɵdirectiveInject(i1.BookService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nUpdateBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateBookComponent,\n  selectors: [[\"app-update-book\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"update-book\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\", 1, \"required\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", \"placeholder\", \"Book title\", 1, \"form-control\"], [\"for\", \"author\", 1, \"required\"], [\"type\", \"text\", \"id\", \"author\", \"formControlName\", \"author\", \"placeholder\", \"Book author\", 1, \"form-control\"], [\"for\", \"description\", 1, \"required\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"Book description\", 1, \"form-control\"], [1, \"row\"], [1, \"col-md-4\", \"col-xs-4\", \"col-sm-4\"], [\"for\", \"dateStart\"], [\"type\", \"date\", \"id\", \"dateStart\", \"formControlName\", \"dateStart\", \"placeholder\", \"Date start\", 1, \"form-control\"], [\"for\", \"dateRead\"], [\"type\", \"date\", \"id\", \"dateRead\", \"formControlName\", \"dateRead\", \"placeholder\", \"Date read\", 1, \"form-control\"], [\"for\", \"rate\"], [\"type\", \"number\", \"min\", \"0\", \"max\", \"5\", \"id\", \"rate\", \"formControlName\", \"rate\", \"placeholder\", \"Rate\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"btn\", \"btn-default\", 3, \"routerLink\"]],\n  template: function UpdateBookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, UpdateBookComponent_form_1_Template, 34, 3, \"form\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form);\n    }\n  },\n  dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MinValidator, i3.MaxValidator, i3.FormGroupDirective, i3.FormControlName, i2.RouterLink],\n  styles: [\".update-book[_ngcontent-%COMP%] {\\r\\n  padding: 0 20% 0 20%;\\r\\n}\\r\\n\\r\\n.required[_ngcontent-%COMP%]:after {\\r\\n  content: \\\"*\\\";\\r\\n  color: red;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy91cGRhdGUtYm9vay91cGRhdGUtYm9vay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7QUFDWiIsInNvdXJjZXNDb250ZW50IjpbIi51cGRhdGUtYm9vayB7XHJcbiAgcGFkZGluZzogMCAyMCUgMCAyMCU7XHJcbn1cclxuXHJcbi5yZXF1aXJlZDphZnRlciB7XHJcbiAgY29udGVudDogXCIqXCI7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","UpdateBookComponent","constructor","service","route","router","fb","getBookById","snapshot","params","id","subscribe","data","book","updateBookForm","group","title","required","author","description","compose","minLength","rate","dateStart","formatDate","dateRead","ngOnInit","date","Date","toISOString","substring","onSubmit","updateBook","value","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\smiti6812\\source\\repos\\Summaries\\Summaries\\ClientApp\\src\\app\\components\\update-book\\update-book.component.ts","C:\\Users\\smiti6812\\source\\repos\\Summaries\\Summaries\\ClientApp\\src\\app\\components\\update-book\\update-book.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BookService } from '../../services/book.service';\r\n\n@Component({\n  selector: 'app-update-book',\n  templateUrl: './update-book.component.html',\n  styleUrls: ['./update-book.component.css']\n})\nexport class UpdateBookComponent implements OnInit {\n  book: any;\n  updateBookForm: FormGroup;\n\n  constructor(private service: BookService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder) {\n    this.service.getBookById(this.route.snapshot.params.id).subscribe(data => {\n      this.book = data;\n\n      this.updateBookForm = this.fb.group({\n        id: [data.id],\n        title: [data.title, Validators.required],\n        author: [data.author, Validators.required],\n        description: [data.description, Validators.compose([Validators.required, Validators.minLength(30)])],\n        rate: [data.rate],\n        dateStart: [this.formatDate(data.dateStart)],\n        dateRead: [this.formatDate(data.dateRead)],\n      })\n\n    })\n\n  }\n\n  ngOnInit() {\n    this.service.getBookById(this.route.snapshot.params.id).subscribe(data => {\n      this.book = data;\n\n      this.updateBookForm = this.fb.group({\n        id: [data.id],\n        title: [data.title, Validators.required],\n        author: [data.author, Validators.required],\n        description: [data.description, Validators.compose([Validators.required, Validators.minLength(30)])],\n        rate: [data.rate],\n        dateStart: [this.formatDate(data.dateStart)],\n        dateRead: [this.formatDate(data.dateRead)],\n      })\n\n    })\n  }\n\n  formatDate(date: Date) {\n    //if (date) {\n      return new Date(date).toISOString().substring(0, 10);\n    //}\n  }\n\n  onSubmit() {\n    this.service.updateBook(this.updateBookForm.value).subscribe(data => {\n      this.router.navigate([\"/books\"]);\n    })\n  }\n}\n","<div class=\"update-book\">\n  <form [formGroup]=\"updateBookForm\" *ngIf=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"title\" class=\"required\">Title</label>\n      <input type=\"text\" class=\"form-control\" id=\"title\" formControlName=\"title\" placeholder=\"Book title\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"author\" class=\"required\">Author</label>\n      <input type=\"text\" class=\"form-control\" id=\"author\" formControlName=\"author\" placeholder=\"Book author\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\" class=\"required\">Description</label>\n      <textarea type=\"text\" class=\"form-control\" id=\"description\" formControlName=\"description\" placeholder=\"Book description\">\n                \n            </textarea>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-4 col-xs-4 col-sm-4\">\n        <div class=\"form-group\">\n          <label for=\"dateStart\">Date start</label>\n          <input type=\"date\"\n                 class=\"form-control\"\n                 id=\"dateStart\"\n                 formControlName=\"dateStart\"\n                 placeholder=\"Date start\">\n        </div>\n      </div>\n      <div class=\"col-md-4 col-xs-4 col-sm-4\">\n        <div class=\"form-group\">\n          <label for=\"dateRead\">Date read</label>\n          <input type=\"date\"\n                 class=\"form-control\"\n                 id=\"dateRead\"\n                 formControlName=\"dateRead\"\n                 placeholder=\"Date read\">\n        </div>\n      </div>\n      <div class=\"col-md-4 col-xs-4 col-sm-4\">\n        <div class=\"form-group\">\n          <label for=\"rate\">Rate</label>\n          <input type=\"number\" min=\"0\" max=\"5\" class=\"form-control\"\n                 id=\"rate\" formControlName=\"rate\" placeholder=\"Rate\">\n        </div>\n      </div>\n    </div>\n\n    <button class=\"btn btn-success\" type=\"submit\">Update</button>\n    <button class=\"btn btn-default\" [routerLink]=\"['/books']\">Cancel</button>\n\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}