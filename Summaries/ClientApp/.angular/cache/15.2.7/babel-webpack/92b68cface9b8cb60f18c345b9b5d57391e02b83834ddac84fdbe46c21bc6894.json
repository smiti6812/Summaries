{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/book.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction UpdateBookComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Book title is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateBookComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, UpdateBookComponent_div_6_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.addBookForm.controls[\"title\"].errors.required);\n  }\n}\nfunction UpdateBookComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Book author is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateBookComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, UpdateBookComponent_div_11_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.addBookForm.controls[\"author\"].errors.required);\n  }\n}\nfunction UpdateBookComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Book description is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateBookComponent_div_16_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Description needs to be at least 30 chars \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateBookComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, UpdateBookComponent_div_16_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵtemplate(2, UpdateBookComponent_div_16_div_2_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.addBookForm.controls[\"description\"].errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.addBookForm.controls[\"description\"].errors.minlength);\n  }\n}\nconst _c0 = function () {\n  return [\"/books\"];\n};\nexport class UpdateBookComponent {\n  constructor(service, route, router, fb) {\n    this.service = service;\n    this.route = route;\n    this.router = router;\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.service.getBookById(this.route.snapshot.params.id).subscribe(data => {\n      this.book = data;\n      this.updateBookForm = this.fb.group({\n        id: [data.id],\n        title: [data.title, Validators.required],\n        author: [data.author, Validators.required],\n        description: [data.description, Validators.compose([Validators.required, Validators.minLength(30)])],\n        rate: [data.rate],\n        dateStart: [this.formatDate(data.dateStart)],\n        dateRead: [this.formatDate(data.dateRead)]\n      });\n    });\n  }\n  formatDate(date) {\n    if (date) {\n      return new Date(date).toISOString().substring(0, 10);\n    }\n  }\n  onSubmit() {\n    this.service.updateBook(this.updateBookForm.value).subscribe(data => {\n      this.router.navigate([\"/books\"]);\n    });\n  }\n}\nUpdateBookComponent.ɵfac = function UpdateBookComponent_Factory(t) {\n  return new (t || UpdateBookComponent)(i0.ɵɵdirectiveInject(i1.BookService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nUpdateBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateBookComponent,\n  selectors: [[\"app-update-book\"]],\n  decls: 37,\n  vars: 7,\n  consts: [[1, \"update-book\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\", 1, \"required\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", \"placeholder\", \"Book title\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"author\", 1, \"required\"], [\"type\", \"text\", \"id\", \"author\", \"formControlName\", \"author\", \"placeholder\", \"Book author\", 1, \"form-control\"], [\"for\", \"description\", 1, \"required\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"Book description\", 1, \"form-control\"], [1, \"row\"], [1, \"col-md-4\", \"col-xs-4\", \"col-sm-4\"], [\"for\", \"dateStart\"], [\"type\", \"date\", \"id\", \"dateStart\", \"formControlName\", \"dateStart\", \"placeholder\", \"Date start\", 1, \"form-control\"], [\"for\", \"dateRead\"], [\"type\", \"date\", \"id\", \"dateRead\", \"formControlName\", \"dateRead\", \"placeholder\", \"Date read\", 1, \"form-control\"], [\"for\", \"rate\"], [\"type\", \"number\", \"min\", \"0\", \"max\", \"5\", \"id\", \"rate\", \"formControlName\", \"rate\", \"placeholder\", \"Rate\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"btn\", \"btn-default\", 3, \"routerLink\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n  template: function UpdateBookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateBookComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, UpdateBookComponent_div_6_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Author\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, UpdateBookComponent_div_11_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 8);\n      i0.ɵɵtext(14, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, UpdateBookComponent_div_16_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementStart(17, \"div\", 10)(18, \"div\", 11)(19, \"div\", 2)(20, \"label\", 12);\n      i0.ɵɵtext(21, \"Date start\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 11)(24, \"div\", 2)(25, \"label\", 14);\n      i0.ɵɵtext(26, \"Date read\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 11)(29, \"div\", 2)(30, \"label\", 16);\n      i0.ɵɵtext(31, \"Rate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 17);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"button\", 18);\n      i0.ɵɵtext(34, \"Update\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"button\", 19);\n      i0.ɵɵtext(36, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateBookForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.addBookForm.controls[\"title\"].invalid && (ctx.addBookForm.controls[\"title\"].dirty || ctx.addBookForm.controls[\"title\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.addBookForm.controls[\"author\"].invalid && (ctx.addBookForm.controls[\"author\"].dirty || ctx.addBookForm.controls[\"author\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.addBookForm.controls[\"description\"].invalid && (ctx.addBookForm.controls[\"description\"].dirty || ctx.addBookForm.controls[\"description\"].touched));\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"disabled\", ctx.addBookForm.pristine || ctx.addBookForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n    }\n  },\n  dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MinValidator, i3.MaxValidator, i3.FormGroupDirective, i3.FormControlName, i2.RouterLink],\n  styles: [\".update-book[_ngcontent-%COMP%] {\\r\\n  padding: 0 20% 0 20%;\\r\\n}\\r\\n\\r\\n.required[_ngcontent-%COMP%]:after {\\r\\n  content: \\\"*\\\";\\r\\n  color: red;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy91cGRhdGUtYm9vay91cGRhdGUtYm9vay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7QUFDWiIsInNvdXJjZXNDb250ZW50IjpbIi51cGRhdGUtYm9vayB7XHJcbiAgcGFkZGluZzogMCAyMCUgMCAyMCU7XHJcbn1cclxuXHJcbi5yZXF1aXJlZDphZnRlciB7XHJcbiAgY29udGVudDogXCIqXCI7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","UpdateBookComponent","constructor","service","route","router","fb","ngOnInit","getBookById","snapshot","params","id","subscribe","data","book","updateBookForm","group","title","required","author","description","compose","minLength","rate","dateStart","formatDate","dateRead","date","Date","toISOString","substring","onSubmit","updateBook","value","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\smiti6812\\source\\repos\\Summaries\\Summaries\\ClientApp\\src\\app\\components\\update-book\\update-book.component.ts","C:\\Users\\smiti6812\\source\\repos\\Summaries\\Summaries\\ClientApp\\src\\app\\components\\update-book\\update-book.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BookService } from '../../services/book.service';\r\n\n@Component({\n  selector: 'app-update-book',\n  templateUrl: './update-book.component.html',\n  styleUrls: ['./update-book.component.css']\n})\nexport class UpdateBookComponent implements OnInit {\n  book: any;\n  updateBookForm: FormGroup;\n\n  constructor(private service: BookService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.service.getBookById(this.route.snapshot.params.id).subscribe(data => {\n      this.book = data;\n\n      this.updateBookForm = this.fb.group({\n        id: [data.id],\n        title: [data.title, Validators.required],\n        author: [data.author, Validators.required],\n        description: [data.description, Validators.compose([Validators.required, Validators.minLength(30)])],\n        rate: [data.rate],\n        dateStart: [this.formatDate(data.dateStart)],\n        dateRead: [this.formatDate(data.dateRead)],\n      })\n\n    })\n  }\n\n  formatDate(date: Date) {\n    if (date) {\n      return new Date(date).toISOString().substring(0, 10);\n    }\n  }\n\n  onSubmit() {\n    this.service.updateBook(this.updateBookForm.value).subscribe(data => {\n      this.router.navigate([\"/books\"]);\n    })\n  }\n}\n","<div class=\"update-book\">\n \n  <form [formGroup]=\"updateBookForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"title\" class=\"required\">Title</label>\n      <input type=\"text\" class=\"form-control\" id=\"title\" formControlName=\"title\" placeholder=\"Book title\">\n    </div>\n    <div *ngIf=\"addBookForm.controls['title'].invalid  && (addBookForm.controls['title'].dirty || addBookForm.controls['title'].touched)\" class=\"alert alert-danger\">\n      <div *ngIf=\"addBookForm.controls['title'].errors.required\">\n        Book title is required\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"author\" class=\"required\">Author</label>\n      <input type=\"text\" class=\"form-control\" id=\"author\" formControlName=\"author\" placeholder=\"Book author\">\n    </div>\n    <div *ngIf=\"addBookForm.controls['author'].invalid  && (addBookForm.controls['author'].dirty || addBookForm.controls['author'].touched)\" class=\"alert alert-danger\">\n      <div *ngIf=\"addBookForm.controls['author'].errors.required\">\n        Book author is required\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"description\" class=\"required\">Description</label>\n      <input type=\"text\" class=\"form-control\" id=\"description\" formControlName=\"description\" placeholder=\"Book description\">\n    </div>\n    <div *ngIf=\"addBookForm.controls['description'].invalid  && (addBookForm.controls['description'].dirty || addBookForm.controls['description'].touched)\" class=\"alert alert-danger\">\n      <div *ngIf=\"addBookForm.controls['description'].errors.required\">\n        Book description is required\n      </div>\n      <div *ngIf=\"addBookForm.controls['description'].errors.minlength\">\n        Description needs to be at least 30 chars\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-4 col-xs-4 col-sm-4\">\n        <div class=\"form-group\">\n          <label for=\"dateStart\">Date start</label>\n          <input type=\"date\"\n                 class=\"form-control\"\n                 id=\"dateStart\"\n                 formControlName=\"dateStart\"\n                 placeholder=\"Date start\">\n        </div>\n      </div>\n      <div class=\"col-md-4 col-xs-4 col-sm-4\">\n        <div class=\"form-group\">\n          <label for=\"dateRead\">Date read</label>\n          <input type=\"date\"\n                 class=\"form-control\"\n                 id=\"dateRead\"\n                 formControlName=\"dateRead\"\n                 placeholder=\"Date read\">\n        </div>\n      </div>\n      <div class=\"col-md-4 col-xs-4 col-sm-4\">\n        <div class=\"form-group\">\n          <label for=\"rate\">Rate</label>\n          <input type=\"number\" min=\"0\" max=\"5\" class=\"form-control\"\n                 id=\"rate\" formControlName=\"rate\" placeholder=\"Rate\">\n        </div>\n      </div>\n    </div>\n\n    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"addBookForm.pristine || addBookForm.invalid\">Update</button>\n    <button class=\"btn btn-default\" [routerLink]=\"['/books']\">Cancel</button>\n\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}